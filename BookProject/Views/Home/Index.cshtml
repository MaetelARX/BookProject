@model BookDisplayModel
@{

}
<style>
    .dropdown-submenu {
        position: relative;
    }

        .dropdown-submenu > .dropdown-menu {
            top: 0;
            left: 100%;
            margin-top: -1px;
        }

    body {
        background-color: #f1f0ef;
    }

    .card {
        overflow: hidden;
    }

    .card-img-top {
        transition: transform 0.5s ease-in-out, filter 1s linear;
        transform-origin: center;
        filter: brightness(100%);
    }

    .card:hover .card-img-top {
        transform: scale(1.3);
    }

    .details-button {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        display: none;
    }

    .card:hover .details-button {
        display: block;
    }
</style>

<div class="my-2">
    <form asp-action="Index" class="row row-cols-lg-auto g-3 align-items-center">
        <div class="col-12 mx-4">
            <label class="visually-hidden" for="genreId">Genres</label>
            <select class="form-select" id="genreId" name="genreId">
                <option selected>Избери жанр</option>
                @foreach (var genre in Model.Genres)
                {
                    <option selected="@(genre.Id == Model.GenreId)" value="@genre.Id">@genre.GenreName</option>
                }
            </select>
        </div>

        <div class="col-12">
            <label class="visually-hidden" for="sterm">Search by title</label>
            <div class="input-group">
                <div class="input-group-text"></div>
                <input type="text" class="form-control" value="@Model.STerm" id="sterm" name="sterm" placeholder="Търси по име">
            </div>
        </div>
        <div class="col-12">
            <button type="submit" class="btn btn-primary">Търси</button>
            <a href="/Home/Index" class="btn btn-dark">Ресетни</a>
        </div>
        <div class="col-12 mx-4">
            <label class="visually-hidden" for="sortBy">Сортирай по:</label>
            <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="sortByDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    @switch (Model.SortBy)
                    {
                        case "PriceAsc":
                        case "PriceDesc":
                            <text>Цена</text>
                            break;
                        case "Title":
                            <text>Заглавие</text>
                            break;
                        case "Author":
                            <text>Автор</text>
                            break;
                        default:
                            <text>Сортирай по</text>
                            break;
                    }
                </button>
                <ul class="dropdown-menu" aria-labelledby="sortByDropdown">
                    <li><a class="dropdown-item" href="?sortBy=Title">Заглавие</a></li>
                    <li><a class="dropdown-item" href="?sortBy=Author">Автор</a></li>
                    <li class="dropdown-submenu">
                        <a class="dropdown-item dropdown-toggle" href="#">Цена</a>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="?sortBy=PriceAsc">Възходящ ред</a></li>
                            <li><a class="dropdown-item" href="?sortBy=PriceDesc">Низходящ ред</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </form>
</div>

<div class="w-100 mt-4 d-flex flex-wrap">
    @foreach (var book in Model.Books)
    {
        <div class="book-card card mx-4 mb-4" style="width: 17rem; position: relative; overflow: hidden; transition: transform 0.3s ease-in-out;">
            <img src="@book.Image" class="card-img-top" alt="...">
            <div class="card-body">
                <h5 class="card-title">@book.BookName</h5>
                <p class="card-text">
                    Genre: @book.GenreName<br>
                    Author: @book.AuthorName<br>
                    Price: @($"{book.Price:f2}")лв<br>
                </p>
                @if (book.Quantity > 0)
                {
                    <button type="button" onclick="add(@book.Id)" class="btn btn-primary">
                        Add to cart
                    </button>
                }
                else
                {
                    <span style="border: 1px solid; padding: 5px 8px; color: red; border-radius: 5px;">Out of stock</span>
                }
            </div>
            <button class="details-button btn btn-dark" onclick="location.href='@Url.Action("ViewDetails", "Book", new { bookId = book.Id })'">Details</button>
        </div>
    }
</div>

@section Scripts {
    <script>
        async function add(bookId) {
            var usernameEl = document.getElementById("username");
            if (usernameEl == null) {
                window.location.href = "/Identity/Account/Login";
                return;
            }

            try {
                var response = await fetch(`/Cart/AddItem?bookId=${bookId}`);
                if (response.status == 200) {
                    var result = await response.json();
                    var cartCountEl = document.getElementById("cartCount");
                    cartCountEl.innerHTML = result;
                }
            } catch (err) {
                console.log("Error adding item to cart:", err);
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            var dropdowns = document.querySelectorAll('.dropdown-submenu');
            dropdowns.forEach(function (dropdown) {
                dropdown.addEventListener('mouseenter', function () {
                    var submenu = this.querySelector('.dropdown-menu');
                    if (submenu) submenu.classList.add('show');
                });
                dropdown.addEventListener('mouseleave', function () {
                    var submenu = this.querySelector('.dropdown-menu');
                    if (submenu) submenu.classList.remove('show');
                });
            });
            document.querySelectorAll('.card-img-top').forEach(function (image) {
                let timer;
                let brightness = 100;

                image.addEventListener('mouseenter', function () {
                    timer = setInterval(() => {
                        if (brightness < 200) {
                            brightness += 2;
                            image.style.filter = `brightness(${brightness}%)`;
                        } else {
                            clearInterval(timer);
                        }
                    }, 50);
                });

                image.addEventListener('mouseleave', function () {
                    clearInterval(timer);
                    brightness = 100;
                    image.style.filter = `brightness(${brightness}%)`;
                });
            });
        });
    </script>
}